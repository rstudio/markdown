% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/renderMarkdown.R
\name{renderMarkdown}
\alias{renderMarkdown}
\title{Render Markdown to an output format}
\usage{
renderMarkdown(
  file = NULL,
  output = NULL,
  text = NULL,
  format = c("html", "latex"),
  options = NULL
)
}
\arguments{
\item{file}{Path to an input file. If not provided, it is presumed that the
\code{text} argument will be used instead. This argument can also take a
character vector of Markdown text directly. To avoid ambiguity in the
latter case, a single character string input will be treated as a file only
when the file exists or it has a file extension. If a string happens to
have a \dQuote{file extension} and should be treated as Markdown text
instead, wrap it in \code{I()}.}

\item{output}{Output file path. If not character, the results will be
returned as a character vector.}

\item{text}{A character vector of the Markdown text. By default, it is read
from \code{file}.}

\item{format}{An output format supported by \pkg{commonmark}, e.g.,
\code{'html'}, \code{'man'}, and \code{'text'}, etc. See the
\code{\link[commonmark:commonmark]{markdown_*}} renderers in
\pkg{commonmark}.}

\item{options}{Options to be passed to the renderer. See
\code{\link{markdownOptions}()} for all possible options. This argument can
take either a character vector of the form \code{"+option1
option2-option3"} (use \code{+} or a space to enable an option, and
\code{-} to disable an option), or a list of the form \code{list(option1 =
value1, option2 = value2, ...)}. A string \code{"+option1"} is equivalent
to \code{list(option1 = TRUE)}, and \code{"-option2"} means
\code{list(option2 = FALSE)}. Options that do not take logical values must
be specified via a list, e.g., \code{list(width = 30)}.}
}
\value{
Invisible \code{NULL} when output is to a file, otherwise a character
  vector.
}
\description{
Render Markdown to an output format via the \pkg{commonmark} package.
}
\examples{
library(markdown)
renderMarkdown(c("Hello _World_!", "", "Welcome to **markdown**."))
# a few corner cases
renderMarkdown(character(0))
renderMarkdown("")
# if input looks like file but should be treated as text, use I()
renderMarkdown(I("This is *not* a file.md"))
# that's equivalent to
renderMarkdown(text = "This is *not* a file.md")
}
\seealso{
The spec of GitHub Flavored Markdown:
  \url{https://github.github.com/gfm/}
}
